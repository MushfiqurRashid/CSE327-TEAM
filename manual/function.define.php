<?php // generated by https://www.devsense.com/

/**
 * Defines a named constant at runtime.
 *
 * @param string $constant_name The name of the constant. Note : It is possible to define() constants with reserved or even invalid names, whose value can (only) be retrieved with constant(). However, doing so is not recommended.
 * @param mixed $value The value of the constant. In PHP 5, `value` must be a `scalar` value (`int`, `float`, `string`, `bool`, or `null` ). In PHP 7, `array` values are also accepted. Warning While it is possible to define `resource` constants, it is not recommended and may cause unpredictable behavior.
 * @param bool|null $case_insensitive If set to `true` , the constant will be defined case-insensitive. The default behavior is case-sensitive; i.e. `CONSTANT` and `Constant` represent different values. Warning Defining case-insensitive constants is deprecated as of PHP 7.3.0. As of PHP 8.0.0, only `false` is an acceptable value, passing `true` will produce a warning. Note : Case-insensitive constants are stored as lower-case.
 * @return bool Returns `true` on success or `false` on failure.
 */
function define($constant_name, $value, $case_insensitive = false): bool { /* function body is hidden */ }